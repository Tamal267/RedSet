An Easy LCS
CkxDUyBtZWFucyAnTG9uZ2VzdCBDb21tb24gU3Vic2VxdWVuY2UnIHRoYXQgbWVhbnMgdHdvIG5vbi1lbXB0eSBzdHJpbmdzIGFyZSBnaXZlbjsgeW91IGhhdmUgdG8gZmluZCB0aGUgTG9uZ2VzdCBDb21tb24gU3Vic2VxdWVuY2UgYmV0d2VlbiB0aGVtLiBTaW5jZSB0aGVyZSBjYW4gYmUgbWFueSBzb2x1dGlvbnMsIHlvdSBoYXZlIHRvIHByaW50IHRoZSBvbmUgd2hpY2ggaXMgdGhlIGxleGljb2dyYXBoaWNhbGx5IHNtYWxsZXN0LiBMZXhpY29ncmFwaGljYWwgb3JkZXIgbWVhbnMgZGljdGlvbmFyeSBvcmRlci4gRm9yIGV4YW1wbGUsICdhYmMnIGNvbWVzIGJlZm9yZSAnYWJkJyBidXQgJ2FheicgY29tZXMgYmVmb3JlICdhYmMnLgoKSW5wdXQKSW5wdXQgc3RhcnRzIHdpdGggYW4gaW50ZWdlciBUICjiiaQgMTAwKSwgZGVub3RpbmcgdGhlIG51bWJlciBvZiB0ZXN0IGNhc2VzLgpFYWNoIGNhc2Ugc3RhcnRzIHdpdGggYSBibGFuayBsaW5lLiBUaGUgbmV4dCB0d28gbGluZXMgd2lsbCBjb250YWluIHR3byBzdHJpbmdzIG9mIGxlbmd0aCAxIHRvIDEwMC4gVGhlIHN0cmluZ3MgY29udGFpbiBsb3dlcmNhc2UgRW5nbGlzaCBjaGFyYWN0ZXJzIG9ubHkuCgpPdXRwdXQKRm9yIGVhY2ggY2FzZSwgcHJpbnQgdGhlIGNhc2UgbnVtYmVyIGFuZCB0aGUgbGV4aWNvZ3JhcGhpY2FsbHkgc21hbGxlc3QgTENTLiBJZiB0aGUgTENTIGxlbmd0aCBpcyAwIHRoZW4ganVzdCBwcmludCA6KC4KU2FtcGxlCklucHV0CjMKYWIKYmEKenhjdmJuCmhqZ2FzYnpueGJ6bXgKeW91CmtqaHMKCk91dHB1dApDYXNlIDE6IGEKQ2FzZSAyOiB6eGIKQ2FzZSAzOiA6KAo=
Ly8gQXV0aG9yOiAgICAgICAgICAgU3llZCBUYW1hbAovLyBDcmVhdGVkOiAgICAgICAgICAxNyBPY3QgMjAyMyAgMTY6MTM6MTAgCgojaW5jbHVkZSA8Yml0cy9zdGRjKysuaD4KdXNpbmcgbmFtZXNwYWNlIHN0ZDsKI2RlZmluZSBpbnQgbG9uZyBsb25nCiNpZmRlZiBPTlBDCiNpbmNsdWRlICJteWRlYnVnLmgiCiNlbHNlCiNkZWZpbmUgZGVidWcoLi4uKSAxCiNlbmRpZgoKc3RyaW5nIGRwWzEwNV1bMTA1XTsKc3RyaW5nIGEsYjsKCnN0cmluZyBmKGludCBpLCBpbnQgail7CiAgICBpZihpPT0wIHx8IGo9PTApIHJldHVybiBkcFtpXVtqXSA9ICIiOwogICAgaWYoZHBbaV1bal0gIT0gIi4iKSByZXR1cm4gZHBbaV1bal07CiAgICBpZihhW2ktMV0gPT0gYltqLTFdKSBkcFtpXVtqXSA9IGYoaS0xLCBqLTEpICsgYVtpLTFdOwogICAgZWxzZXsKICAgICAgICBzdHJpbmcgaVAgPSBmKGktMSwgaiksIGpQID0gZihpLCBqLTEpOwogICAgICAgIGlmKGlQLnNpemUoKSA+IGpQLnNpemUoKSkgZHBbaV1bal0gPSBpUDsKICAgICAgICBlbHNlIGlmKGlQLnNpemUoKSA8IGpQLnNpemUoKSkgZHBbaV1bal0gPSBqUDsKICAgICAgICBlbHNlIGlmKGlQIDwgalApIGRwW2ldW2pdID0gaVA7CiAgICAgICAgZWxzZSBkcFtpXVtqXSA9IGpQOwogICAgfQogICAgcmV0dXJuIGRwW2ldW2pdOwp9Cgp2b2lkIHNvbHZlKCl7CiAgICBmb3IoaW50IGk9MDtpPDEwNTtpKyspewogICAgICAgIGZvcihpbnQgaj0wO2o8MTA1O2orKyl7CiAgICAgICAgICAgIGRwW2ldW2pdID0gIi4iOwogICAgICAgIH0KICAgIH0KICAgIGNpbj4+YT4+YjsKICAgIHN0cmluZyBhbnMgPSBmKGEuc2l6ZSgpLCBiLnNpemUoKSk7CiAgICBpZihhbnMuc2l6ZSgpID09IDApIGNvdXQ8PCI6KFxuIjsKICAgIGVsc2UgY291dDw8YW5zPDwiXG4iOwp9CgppbnQzMl90IG1haW4oKXsKICAgIGlvczo6c3luY193aXRoX3N0ZGlvKGZhbHNlKTsKICAgIGNpbi50aWUobnVsbHB0cik7CiAgICBpbnQgbjsKICAgIGNpbj4+bjsKICAgIGZvcihpbnQgaT0xO2k8PW47aSsrKSB7CiAgICAgICAgY291dDw8IkNhc2UgIjw8aTw8IjogIjsKICAgICAgICBzb2x2ZSgpOwogICAgfQp9Cg==
MwoKYWIKYmEKCnp4Y3Zibgpoamdhc2J6bnhiem14Cgp5b3UKa2pocwo= MTAwCgppbWl0YXRpdmUKYWVzY2h5bHVzCgpwZXJmb3JtZXIKZm9vdHN0b29sCgpjb250aW5nZW5jeQphdXRoZW50aWMKCnByb3ZlbmRlcgplZGluYnVyZ2gKCmRlbGlucXVlbnQKY29uc29uYW50CgpvY2N1cGF0aW9uCmNvbnZhbGVzY2VuY2UKCmlkZWFsaXplZApodW1hbml0YXJpYW4KCmNvc21vcG9saXRhbgpzdXJyb3VuZGVkCgpvY2N1cGF0aW9uCm1vbm90aGVpc20KCmV4Y2VsbGVudApwcm9waXRpYXRlCgpvY2N1cGF0aW9uCnF1YWxpZnlpbmcKCm91dHNvdXJjaW5nCmFkbWlzc2lvbnMKCmRpc2luY2xpbmF0aW9uCmFkdmVydGlzZQoKc3VtbWFyaWVzCmNocm9uaWNsZXMKCmNhbmRlbGFicmEKY2l2aWxpemF0aW9uCgpwZXJtaXNzaW9uCnRyYW5zcGFyZW5jeQoKZGlmZmVyZW5jZQpmcmFudGljYWxseQoKcHJvY2Vzc2luZwptZWxvZHJhbWEKCmNsYXNzcm9vbQpjYXN0aWxpYW4KCmFkbW9uaXRpb24KaW50ZXJ0d2luZWQKCnRyb3Vzc2VhdQp1bmRlcnJhdGVkCgpiZW5pZ25hbnQKbWlzY2hhbmNlCgpjYW5kaWRhY3kKaW50cmVwaWRpdHkKCmVzdHJhbmdlZApzaWduaWZpY2FuY2UKCmNhc3Vpc3RyeQpzYWNyYW1lbnQKCmRlbW9saXRpb24Kc2lsaWNlb3VzCgpjaHJpc3RvcGhlcgpncmVlbmhvdXNlCgpjb25mZXJlbmNlCmxpdmVzdG9jawoKYW50YWdvbmlzdGljCmhhcHBlbmluZwoKc2VudGVudGlvdXMKY2Fub25pY2FsCgp0b3VybmFtZW50CnByZXRlbmRlcgoKYXJ0aWZpY2lhbGx5Cm1hbmhhdHRhbgoKY3Jlc2NlbmRvCmRpc2FiaWxpdGllcwoKZnJhbmNpc2NvCnByZXZlbnRpb24KCnRoZXJldW50bwpwYXJ0aWNpcGF0aW5nCgphcHBvaW50ZWQKaG9wZWZ1bGx5Cgpjb3Vuc2VsaW5nCmFmZmx1ZW5jZQoKY29ubm9pc3NldXIKaW5kaWFuYXBvbGlzCgp0cmFuc3NleHVhbApkaW1pbnV0aXZlCgpzeW1wb3NpdW0KcGVyc3BlY3RpdmVzCgppbnNhdGlhYmxlCmNhbmNlbGxhdGlvbgoKZ2VuZWFsb2d5Cm5ld2ZvdW5kbGFuZAoKYWNjZWxlcmF0ZWQKaW1wZXJ2aW91cwoKZXhwZWN0YXRpb25zCmRpc2VtYmFyawoKYWRtaW5pc3RyYXRvcgphcnRocml0aXMKCnJlc3BvbmRlZApmYWNpbGl0aWVzCgpwcm9jdXJlbWVudApjaHVyY2htYW4KCmNocmlzdGluYQp0dW11bHR1b3VzbHkKCnN1cGVyc2VkZWQKYWR2b2NhdGVkCgpteXN0aWZpZWQKb2ZmaWNpYWxseQoKc2NhbmRpbmF2aWEKZGVjbGFyYXRpb24KCmF1dGhvcml0aWVzCmJhc2tldGJhbGwKCnByb2R1Y2luZwpjaGFtcGlvbnMKCmNlcnRpZmllZApjdWxtaW5hdGlvbgoKdHJhdmVsZXJzCmNhcGl0YWxpc3QKCmF1dGhvcml6ZWQKY2FsY3VsYXRpb25zCgppbmNsdXNpdmUKZGlzdG9ydGlvbgoKbWF0ZXJpYWxpc3RpYwpyZWNvcmRpbmcKCmVsZWN0cmljYWwKaW1wYXJ0aW5nCgpyZXByZXNlbnRpbmcKdW5yZWxhdGVkCgpzZXB0dWFnaW50Cm9ic2Vzc2lvbgoKcGVkYWdvZ3VlCmZyYW50aWNhbGx5CgpuZXdmb3VuZGxhbmQKZW1ib2RpbWVudAoKbWlzZGVtZWFub3IKYXBwbGljYW50Cgpwcm9taXNjdW91cwpjaXJjdW1zdGFuY2VzCgppbmZlY3Rpb3VzCm1pbGxpbmVyeQoKZXh0aXJwYXRpb24KYnJvYWRzaWRlCgpjYWxjdWxhdGUKaW5zaW51YXRpb24KCnByb3BhZ2F0ZQptb25pdG9yZWQKCmhvcnNlaGFpcgphcHBlYXJpbmcKCmNyYWNrbGluZwpqdWRpY2F0dXJlCgpzaG9ydGhhbmQKd2FzaGluZ3RvbgoKc2VjcmV0YXJpYXQKYWJzb3JwdGlvbgoKcG9wdWxhdGlvbgppbnRlbnNpdmUKCnN0ZW5vZ3JhcGhlcgp0cmFuc21pc3Npb24KCmNvbnNlY3JhdGlvbgp0aHJlc2hvbGQKCmVuZ2xpc2h3b21hbgpzdGVwZGF1Z2h0ZXIKCmZsYXR0ZW5lZAplcXVpbGlicml1bQoKYXV0b2NyYXRpYwpzcGVjaWFsaXppbmcKCmF1Z21lbnRhdGlvbgppbW1vZGVyYXRlCgpzeW1ib2xpc20KYXJ0aWN1bGF0ZQoKaGllcmFyY2h5CmF0bW9zcGhlcmljCgpkaXNjbGFpbWVyCmdyb3VuZHdvcmsKCnNob3d0aW1lcwptb2hhbW1lZGFuCgpyZW1vcnNlbGVzcwp0cmFuc3BvcnRhdGlvbgoKd2l0dGljaXNtCnJldmVsYXRpb24KCnVwcmlnaHRuZXNzCmdlbmVyYXRvcnMKCmltcGxlbWVudAphZHZlbnR1cmUKCnZvbHVwdHVvdXNuZXNzCnBhcnRpY2lwYXRlCgppbmNlcHRpb24Kb3JnYW5pc2F0aW9ucwoKYXV0b2dyYXBoCnN0cmF3YmVycnkKCnByZWZlY3R1cmUKY29udHJvbGxlcnMKCmNhYnJpb2xldApxdWFkcmFuZ2xlCgpwb3N0Y2FyZHMKbWV0YW1vcnBob3NpcwoKdGVsZXNjb3BlCmJlbGVhZ3VlcmVkCgpub3RpZmljYXRpb25zCmJpb2xvZ2ljYWwKCmNyaXRpY2FsbHkKcHJvc3RvcmVzCgptb3RoZXJib2FyZApjb250ZW50aW91cwoKcmVjZXB0b3JzCmFyZ2VudGluYQoKY2F0YWxvZ3VlcwpzdHV0dGdhcnQK 
1
--  tamal_63 MjAyMy8xMS8wNCAyMTo0OTo0NwpBY2NlcHRlZApUaW1lOiA3bXMKTWVtb3J5OiAyOUtCCg== Ly8gQXV0aG9yOiAgICAgICAgICAgU3llZCBUYW1hbAovLyBDcmVhdGVkOiAgICAgICAgICAxNyBPY3QgMjAyMyAgMTY6MTM6MTAgCgojaW5jbHVkZSA8Yml0cy9zdGRjKysuaD4KdXNpbmcgbmFtZXNwYWNlIHN0ZDsKI2RlZmluZSBpbnQgbG9uZyBsb25nCiNpZmRlZiBPTlBDCiNpbmNsdWRlICJteWRlYnVnLmgiCiNlbHNlCiNkZWZpbmUgZGVidWcoLi4uKSAxCiNlbmRpZgoKc3RyaW5nIGRwWzEwNV1bMTA1XTsKc3RyaW5nIGEsYjsKCnN0cmluZyBmKGludCBpLCBpbnQgail7CiAgICBpZihpPT0wIHx8IGo9PTApIHJldHVybiBkcFtpXVtqXSA9ICIiOwogICAgaWYoZHBbaV1bal0gIT0gIi4iKSByZXR1cm4gZHBbaV1bal07CiAgICBpZihhW2ktMV0gPT0gYltqLTFdKSBkcFtpXVtqXSA9IGYoaS0xLCBqLTEpICsgYVtpLTFdOwogICAgZWxzZXsKICAgICAgICBzdHJpbmcgaVAgPSBmKGktMSwgaiksIGpQID0gZihpLCBqLTEpOwogICAgICAgIGlmKGlQLnNpemUoKSA+IGpQLnNpemUoKSkgZHBbaV1bal0gPSBpUDsKICAgICAgICBlbHNlIGlmKGlQLnNpemUoKSA8IGpQLnNpemUoKSkgZHBbaV1bal0gPSBqUDsKICAgICAgICBlbHNlIGlmKGlQIDwgalApIGRwW2ldW2pdID0gaVA7CiAgICAgICAgZWxzZSBkcFtpXVtqXSA9IGpQOwogICAgfQogICAgcmV0dXJuIGRwW2ldW2pdOwp9Cgp2b2lkIHNvbHZlKCl7CiAgICBmb3IoaW50IGk9MDtpPDEwNTtpKyspewogICAgICAgIGZvcihpbnQgaj0wO2o8MTA1O2orKyl7CiAgICAgICAgICAgIGRwW2ldW2pdID0gIi4iOwogICAgICAgIH0KICAgIH0KICAgIGNpbj4+YT4+YjsKICAgIHN0cmluZyBhbnMgPSBmKGEuc2l6ZSgpLCBiLnNpemUoKSk7CiAgICBpZihhbnMuc2l6ZSgpID09IDApIGNvdXQ8PCI6KFxuIjsKICAgIGVsc2UgY291dDw8YW5zPDwiXG4iOwp9CgppbnQzMl90IG1haW4oKXsKICAgIGlvczo6c3luY193aXRoX3N0ZGlvKGZhbHNlKTsKICAgIGNpbi50aWUobnVsbHB0cik7CiAgICBpbnQgbjsKICAgIGNpbj4+bjsKICAgIGZvcihpbnQgaT0xO2k8PW47aSsrKSB7CiAgICAgICAgY291dDw8IkNhc2UgIjw8aTw8IjogIjsKICAgICAgICBzb2x2ZSgpOwogICAgfQp9Cg==